// eCos memory layout

#include <pkgconf/hal.h>
#include <cyg/infra/cyg_type.inc>

MEMORY
{
    rom   : ORIGIN = 0x0, LENGTH = 0x00400000
    ram   : ORIGIN = CYGHWR_MEMORY_SDRAM_BASE_ADDRESS, LENGTH = 0x04000000-CYGNUM_HAL_MICROBLAZE_COMMON_INTERRUPTS_STACK_SIZE
}

SECTIONS
{
    SECTIONS_BEGIN
    SECTION_vectors (rom, 0x00000000, LMA_EQ_VMA)
    SECTION_text (rom, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_fini (rom, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_rodata (rom, ALIGN(0x8), LMA_EQ_VMA)
    SECTION_rodata1 (rom, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_fixup (rom, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_gcc_except_table (rom, ALIGN (0x8), LMA_EQ_VMA)
    SECTION_eh_frame (rom, ALIGN (0x8), LMA_EQ_VMA)
    CYG_LABEL_DEFN(__reserved_vectors) = CYGHWR_MEMORY_SDRAM_BASE_ADDRESS; . = CYG_LABEL_DEFN(__reserved_vectors) + 0x1000;
    CYG_LABEL_DEFN(__reserved_vsr_table) = ALIGN (0x1); . = CYG_LABEL_DEFN(__reserved_vsr_table) + 0x200;
    CYG_LABEL_DEFN(__reserved_virtual_table) = ALIGN (0x1); . = CYG_LABEL_DEFN(__reserved_virtual_table) + 0x100;
    SECTION_data (ram, ALIGN (0x8), FOLLOWING(.eh_frame))
    SECTION_bss (ram, ALIGN (0x8), LMA_EQ_VMA)
    CYG_LABEL_DEFN(__heap1) = ALIGN (0x8);
    SECTIONS_END
}

hal_startup_stack        = CYGHWR_MEMORY_SDRAM_BASE_ADDRESS + 0x04000000;
hal_vsr_table            = CYGHWR_MEMORY_SDRAM_BASE_ADDRESS + 0x1000;
hal_virtual_vector_table = CYGHWR_MEMORY_SDRAM_BASE_ADDRESS + 0x1000 + 0x200;